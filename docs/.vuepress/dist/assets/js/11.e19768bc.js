(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{368:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js-基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-基础知识"}},[t._v("#")]),t._v(" JS 基础知识")]),t._v(" "),s("h2",{attrs:{id:"js-数据类型相关知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-数据类型相关知识"}},[t._v("#")]),t._v(" JS 数据类型相关知识：")]),t._v(" "),s("h3",{attrs:{id:"js-有哪些数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-有哪些数据类型"}},[t._v("#")]),t._v(" JS 有哪些数据类型？🌟")]),t._v(" "),s("ul",[s("li",[t._v("分类：基本类型和引用类型")]),t._v(" "),s("li",[t._v("基本类型：Number、String、Boolean、Null、Undefined、Symbol、BigIng")]),t._v(" "),s("li",[t._v("引用类型：Object")])]),t._v(" "),s("h3",{attrs:{id:"基本类型和引用类型的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本类型和引用类型的区别"}},[t._v("#")]),t._v(" 基本类型和引用类型的区别？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("区别点")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("基本类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("引用类型")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("可变性")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("一经确定就不可变")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以为其添加属性和方法、也可以删除属性和方法")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("比较方式")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("值的比较")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("引用地址的比较")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("存储位置")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("存储在栈中")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("变量的标识符和地址存储在栈中、实际的值存储在堆中")])])])]),t._v(" "),s("h3",{attrs:{id:"typeof-和-instanceof-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeof-和-instanceof-的区别"}},[t._v("#")]),t._v(" typeof 和 instanceof 的区别？")]),t._v(" "),s("ul",[s("li",[t._v("typeof：\n"),s("ul",[s("li",[t._v("用途：对基本类型进行判断，也可以判断函数类型。但是不能对判断引用类型和 null，都会返回 object。")]),t._v(" "),s("li",[t._v("原理：根据机器码对地址信息。")])])]),t._v(" "),s("li",[t._v("instanceof：\n"),s("ul",[s("li",[t._v("用途：对引用类型进行判断，但是所有的引用类型都是 Object。")]),t._v(" "),s("li",[t._v("原理：检测构造函数的 prototype 属性是否出现在某个实例对象的原型链。（实例的隐式原型能否等于某个 class 的显示原型）")])])])]),t._v(" "),s("h3",{attrs:{id:"如何判断是否是数组-以及各个方法的优劣势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何判断是否是数组-以及各个方法的优劣势"}},[t._v("#")]),t._v(" 如何判断是否是数组，以及各个方法的优劣势？🌟")]),t._v(" "),s("ul",[s("li",[t._v("instanceof：\n"),s("ul",[s("li",[t._v("通过检测构造函数的 prototype 属性是否出现在某个实例对象的原型链。")]),t._v(" "),s("li",[t._v("instanceof 只能用来判断对象类型，基本类型不可以使用。")]),t._v(" "),s("li",[t._v("所有的对象类型 instanceof Object 都是 true。")])])]),t._v(" "),s("li",[t._v("Object.prototype.toString.call()：\n"),s("ul",[s("li",[t._v("这种方法对于所有类型都能进行判断。")]),t._v(" "),s("li",[t._v("返回值为字符串。")])])]),t._v(" "),s("li",[t._v("Array.isArray()：\n"),s("ul",[s("li",[t._v("实际是 Object.prototype.toString.call() 判断的一种封装形式。")]),t._v(" "),s("li",[t._v("是新增方法，需要使用 babel 兼容或者判断不存在使用第一种方式。")])])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用方式如下：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[object Array]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h3",{attrs:{id:"null-与-undefined-的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null-与-undefined-的区别是什么"}},[t._v("#")]),t._v(" null 与 undefined 的区别是什么？")]),t._v(" "),s("ul",[s("li",[t._v("null：表示没有对象，指向了空地址\n"),s("ul",[s("li",[t._v("原型链的终点")]),t._v(" "),s("li",[t._v("作为函数参数，表示该参数不应该是对象")])])]),t._v(" "),s("li",[t._v("undefined：表示缺少值，该处应该有值，但是未定义\n"),s("ul",[s("li",[t._v("变量命名了，但是没有被赋值即为 undefined")]),t._v(" "),s("li",[t._v("调用函数了，应该提供的参数没提供，该参数即为 undefined")]),t._v(" "),s("li",[t._v("对象没有赋值的属性，该值 undefined")]),t._v(" "),s("li",[t._v("函数没有返回值，默认为 undefined")])])])]),t._v(" "),s("h3",{attrs:{id:"为什么会有-bigint-的出现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么会有-bigint-的出现"}},[t._v("#")]),t._v(" 为什么会有 bigInt 的出现？")]),t._v(" "),s("p",[t._v("主要是为了解决大数运算的问题，用来表示 2^53 - 1 以上的数字。")]),t._v(" "),s("h3",{attrs:{id:"_0-1-0-2为什么不等于0-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-1-0-2为什么不等于0-3"}},[t._v("#")]),t._v(" 0.1+0.2为什么不等于0.3？")]),t._v(" "),s("p",[t._v("小数运算在二进制转换之间出现的问题。")]),t._v(" "),s("h3",{attrs:{id:"数组相关操作有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组相关操作有哪些"}},[t._v("#")]),t._v(" 数组相关操作有哪些？")]),t._v(" "),s("ul",[s("li",[t._v("转换方法：\n"),s("ul",[s("li",[t._v("toString：方法会返回由数组中每个值的字符串形式拼接而成的一个以逗号分隔的字符串。")]),t._v(" "),s("li",[t._v("valueOf：返回当前数组。")])])]),t._v(" "),s("li",[t._v("栈方法：\n"),s("ul",[s("li",[t._v("pop：从数组中删除最后一个元素，修改原数组，返回被删除的元素。")]),t._v(" "),s("li",[t._v("push：将一个或多个元素添加到数组的末尾，修改原数组，返回该数组的长度。\n-队列方法：")]),t._v(" "),s("li",[t._v("shift：从数组中删除第一个元素，修改原数组，返回被删除的元素。")]),t._v(" "),s("li",[t._v("unshift：将一个或多个元素添加到数组的开头，修改原数组，返回该数组的长度。")])])]),t._v(" "),s("li",[t._v("排序方法：\n"),s("ul",[s("li",[t._v("reverse：反转数组，修改原数组，返回反转后的数组。")]),t._v(" "),s("li",[t._v("sort：对数组进行排序，默认排序会将数组元素转换为字符串，修改原数组，返回排序后的数组")])])]),t._v(" "),s("li",[t._v("操作方法：\n"),s("ul",[s("li",[t._v("concat：基于当前数组的所有项创建新数组，不修改原数组，返回新数组。")]),t._v(" "),s("li",[t._v("fill：用一个固定值填充一个数组中从起始索引到终止索引内的全部元素，最多可以接受3个参数，修改原数组，返回修改后的数组。")]),t._v(" "),s("li",[t._v("find：对数组每一项运行给定函数，找出第一个符合条件的数组元素，返回这个元素，找不到则返回 undefined。")]),t._v(" "),s("li",[t._v("flat：对数组按照指定深度进行展平，不修改原数组，返回新数组。")]),t._v(" "),s("li",[t._v("includes：用来判断一个数组是否包含一个指定的值，包含返回 true，不包含返回 false。")]),t._v(" "),s("li",[t._v("join：将数组的所有元素用指定字符连接成一个字符串，不修改原数组，返回连接后的字符串。")]),t._v(" "),s("li",[t._v("slice：根据给定参数对数组进行分割操作，不修改原数组，返回分割后的数组。")]),t._v(" "),s("li",[t._v("splice：通过删除或替换现有元素或在原数组基础上增加新的元素来修改数组，")])])]),t._v(" "),s("li",[t._v("位置方法：\n"),s("ul",[s("li",[t._v("findIndex：对数组每一项运行给定函数，找出第一个符合条件的数组元素，返回这个元素的索引，找不到则返回 -1。")]),t._v(" "),s("li",[t._v("indexOf：返回数组中可以找到一个给定元素的第一个索引，找不到则返回-1。")]),t._v(" "),s("li",[t._v("lastIndexOf：返回数组中可以找到一个给定元素的最后一个索引，找不到则返回-1。")])])]),t._v(" "),s("li",[t._v("迭代方法：\n"),s("ul",[s("li",[t._v("every：对数组每一项运行给定函数，如果该函数每一项都返回 true 就返回 true 反之返回 false。")]),t._v(" "),s("li",[t._v("filter：对数组每一项运行给定函数，返回该函数执行为 true 的项组成的数组，不修改原数组，返回新数组。")]),t._v(" "),s("li",[t._v("forEach：对数组的每一项运行给定函数，不修改原数组，没有返回值。")]),t._v(" "),s("li",[t._v("map：对数组的每一项运行给定函数，返回每一项执行后组成的数组，不修改原数组，返回新数组。")]),t._v(" "),s("li",[t._v("some：对数组每一项运行给定函数，如果该函数某一项返回 true 就返回 true 反之返回 false。")])])]),t._v(" "),s("li",[t._v("归并方法：\n"),s("ul",[s("li",[t._v("reduce：对数组从左到右每一项执行一个给定的 reducer 函数，将其结果汇总为一个单个返回值。")]),t._v(" "),s("li",[t._v("reduceRight：对数组从右到左每一项执行一个给定的 reducer 函数，将其结果汇总为一个单个返回值。")])])])]),t._v(" "),s("h3",{attrs:{id:"和-的使用情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-的使用情况"}},[t._v("#")]),t._v(" == 和 === 的使用情况？")]),t._v(" "),s("ul",[s("li",[t._v("区别：\n"),s("ul",[s("li",[t._v("==：返回一个布尔值；相等返回true，不相等返回false；允许不同数据类型之间的比较。")]),t._v(" "),s("li",[t._v("===：只要数据类型不一样，就返回false。\n使用：")]),t._v(" "),s("li",[t._v("==：只有在判断变量是否为 null 或 undefined 时使用。")]),t._v(" "),s("li",[t._v("===：除上述外都推荐使用这种方式。")])])])]),t._v(" "),s("h3",{attrs:{id:"隐式类型转换会在那里出现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换会在那里出现"}},[t._v("#")]),t._v(" 隐式类型转换会在那里出现？")]),t._v(" "),s("ul",[s("li",[t._v("字符串拼接")]),t._v(" "),s("li",[t._v("== 运算符")]),t._v(" "),s("li",[t._v("if 语句")]),t._v(" "),s("li",[t._v("逻辑运算符")])]),t._v(" "),s("h2",{attrs:{id:"js-执行机制相关知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-执行机制相关知识"}},[t._v("#")]),t._v(" JS 执行机制相关知识：")]),t._v(" "),s("h3",{attrs:{id:"var、let、const-之间的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var、let、const-之间的区别"}},[t._v("#")]),t._v(" var、let、const 之间的区别？🌟")]),t._v(" "),s("ul",[s("li",[t._v("var\n"),s("ul",[s("li",[t._v("ES5的语法，作用域为该语句所在的函数内")]),t._v(" "),s("li",[t._v("存在变量提升现象（在变量声明之前可以使用，但是值为undefined）")]),t._v(" "),s("li",[t._v("变量可以重复声明，以后声明的为主")])])]),t._v(" "),s("li",[t._v("let\n"),s("ul",[s("li",[t._v("ES6的语法，作用域为该语句所在的代码块内（块级作用域）")]),t._v(" "),s("li",[t._v("不存在变量提升")]),t._v(" "),s("li",[t._v("变量不可以重复声明")])])]),t._v(" "),s("li",[t._v("const\n"),s("ul",[s("li",[t._v("ES6的语法，作用域为该语句所在的代码块内（块级作用域）")]),t._v(" "),s("li",[t._v("不存在变量提升")]),t._v(" "),s("li",[t._v("变量一旦声明就不能修改，试图修改 const 声明的常量会报错")]),t._v(" "),s("li",[t._v("变量声明时必须直接赋值，只声明不赋值会报错")])])])]),t._v(" "),s("h3",{attrs:{id:"解释下变量提升和函数提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解释下变量提升和函数提升"}},[t._v("#")]),t._v(" 解释下变量提升和函数提升？")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("变量提升：")]),t._v(" JS 引擎的工作方式会先解析代码，获取所有 var 声明的变量并将声明语句依次提前到作用域的顶端，然后在一行一行的执行。")]),t._v(" "),s("li",[s("strong",[t._v("函数提升：")]),t._v(" JS 解析代码阶段，会将所有的函数（整个函数定义）依次提升到作用域的最顶端。")]),t._v(" "),s("li",[t._v("说明：函数提升的优先级高于变量提升。")])]),t._v(" "),s("h3",{attrs:{id:"什么是-javascript-预解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-javascript-预解析"}},[t._v("#")]),t._v(" 什么是 JavaScript 预解析？")]),t._v(" "),s("p",[t._v("我们大致可以把 JS 代码的运行分为两个阶段：预解析阶段和执行阶段。"),s("br"),t._v("\n在预解析阶段会把使用 var 声明的变量、函数提升到作用域的最顶端，同名的变量或者函数后者会覆盖前者。")]),t._v(" "),s("h3",{attrs:{id:"一段-javascript-代码是如何执行的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一段-javascript-代码是如何执行的"}},[t._v("#")]),t._v(" 一段 JavaScript 代码是如何执行的？")]),t._v(" "),s("p",[t._v("JS 代码的执行分为两个阶段：预解析阶段和执行阶段。")]),t._v(" "),s("ul",[s("li",[t._v("预解析阶段：变量和函数提升、创建可执行环境的上下文。")]),t._v(" "),s("li",[t._v("执行阶段：按照可执行的代码顺序先后执行、通过栈管理多个执行上下文、出现报错后面代码不会再执行。")])]),t._v(" "),s("h3",{attrs:{id:"javascript-的运行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的运行机制"}},[t._v("#")]),t._v(" JavaScript 的运行机制？")]),t._v(" "),s("ul",[s("li",[t._v("从前到后一行一行执行")]),t._v(" "),s("li",[t._v("如果某一行执行报错，则停止后面代码的执行")]),t._v(" "),s("li",[t._v("先把同步代码执行完，再执行异步代码")])]),t._v(" "),s("h2",{attrs:{id:"js-原型及原型链相关知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-原型及原型链相关知识"}},[t._v("#")]),t._v(" JS 原型及原型链相关知识：")]),t._v(" "),s("h3",{attrs:{id:"谈谈你对原型和原型链的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对原型和原型链的理解"}},[t._v("#")]),t._v(" 谈谈你对原型和原型链的理解？🌟")]),t._v(" "),s("ul",[s("li",[t._v("原型：\n"),s("ul",[s("li",[t._v("每一个构造函数都有一个显示原型 prototype")]),t._v(" "),s("li",[t._v("每一个实例都有一个隐式原型 __proto__")]),t._v(" "),s("li",[t._v("实例的隐式原型等于其构造函数的显示原型")]),t._v(" "),s("li",[t._v("在实例中获取属性和方法时，现在自身属性和方法中寻找，如果找不到则自动去 __proto__ 寻找。")])])]),t._v(" "),s("li",[t._v("原型链：\n"),s("ul",[s("li",[t._v("访问一个实例中的方法，找不到自动去 __proto__ 中查找，直到最后查找到 Object.prototype 中。")]),t._v(" "),s("li",[t._v("可以通过 hasOwnPrototype 确定实例是否时自身的")])])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lml'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数的显示原型")]),t._v("\no1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例的隐式原型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" o1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 实例的隐式原型===构造函数的显示原型")]),t._v("\no1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用实例的方法")]),t._v("\no1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用构造函数的方法")]),t._v("\no1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用不存在的方法 undefined")]),t._v("\no1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sayName'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 判断 sayName 是否是实例的自有属性")]),t._v("\no1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false 判断构造函数的方法是不是实例的自有属性")]),t._v("\n")])])]),s("h3",{attrs:{id:"原型、构造函数、实例之间的关系-todo图解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型、构造函数、实例之间的关系-todo图解"}},[t._v("#")]),t._v(" 原型、构造函数、实例之间的关系？🌟TODO图解")]),t._v(" "),s("ul",[s("li",[t._v("关系：假设 o 为实例，Object 为构造函数\n"),s("ul",[s("li",[t._v("实例是通过构造函数 new 出来的")]),t._v(" "),s("li",[t._v("实例的隐式原型等于其构造函数的显示原型：o."),s("strong",[t._v("proto")]),t._v(" = Object.prototype")]),t._v(" "),s("li",[t._v("实例的 constructor 等于构造函数：o.constructor = Object")])])]),t._v(" "),s("li",[t._v("不能给构造函数直接添加属性。应该给构造函数的原型上添加属性。Xxx.prototype.xxx")]),t._v(" "),s("li",[t._v("每一个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。")]),t._v(" "),s("li",[t._v("可以通过 instanceof 操作符来确定原型和实例之间的关系。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 实例的隐式原型 === 构造函数的显示原型")]),t._v("\no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 实例的 constructor === 构造函数")]),t._v("\n")])])]),s("h3",{attrs:{id:"new-运算符的执行过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-运算符的执行过程"}},[t._v("#")]),t._v(" new 运算符的执行过程？")]),t._v(" "),s("ul",[s("li",[t._v("新生成一个对象")]),t._v(" "),s("li",[t._v("链接到原型：o.__proto__ = Object.prototype")]),t._v(" "),s("li",[t._v("绑定this")]),t._v(" "),s("li",[t._v("返回新的实例对象")])]),t._v(" "),s("h3",{attrs:{id:"instanceof-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-原理"}},[t._v("#")]),t._v(" instanceof 原理？")]),t._v(" "),s("p",[t._v("检测构造函数的 prototype 属性是否出现在某个实例对象的原型链。")]),t._v(" "),s("h3",{attrs:{id:"继承的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承的方式"}},[t._v("#")]),t._v(" 继承的方式？")]),t._v(" "),s("h3",{attrs:{id:"es5-和-es6继承方式比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es5-和-es6继承方式比较"}},[t._v("#")]),t._v(" ES5 和 ES6继承方式比较")]),t._v(" "),s("h3",{attrs:{id:"谈谈对-class-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈对-class-的理解"}},[t._v("#")]),t._v(" 谈谈对 class 的理解？")]),t._v(" "),s("ul",[s("li",[t._v("constructor：")]),t._v(" "),s("li",[t._v("属性：")]),t._v(" "),s("li",[t._v("方法：")]),t._v(" "),s("li",[t._v("继承 extends：\n"),s("ul",[s("li",[t._v("super：")]),t._v(" "),s("li",[t._v("扩展和重写：")])])]),t._v(" "),s("li",[t._v("原型关系：\n"),s("ul",[s("li",[t._v("每个 class 都有显示原型 prototype")]),t._v(" "),s("li",[t._v("每个实例都有隐式原型 __proto__")]),t._v(" "),s("li",[t._v("class 的显示原型全等于实例的隐式原型")])])]),t._v(" "),s("li",[t._v("基于原型的执行规则：\n"),s("ul",[s("li",[t._v("获取某个属性或方法时现在自身属性和方法中寻找")]),t._v(" "),s("li",[t._v("如果找不到自动去 __proto__ 中去寻找")])])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个基类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" eating something")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Student 继承于基类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" number\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("姓名：")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("，学号：")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("number"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Teacher 继承于基类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Teacher")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" major")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("major "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" major"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("teachSome")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("姓名：")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("，科目：")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("major"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重写父类方法")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" eating everything")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个 Student 的实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xialuo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'夏洛'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个 Teacher 的实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Teacher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'连明亮'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'语文'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对父类方法重写")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xialuo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" xialuo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// class 的显示原型等于其实例的隐式原型")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子 class 的显示原型的隐式原型等于其父 class 的显示原型")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"'image/prototype.png'",alt:"原型链图片解析"}})]),t._v(" "),s("h3",{attrs:{id:"class-原型本质是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-原型本质是什么"}},[t._v("#")]),t._v(" class 原型本质是什么？")]),t._v(" "),s("p",[t._v("本质是 function，我们可以通过 typeof 来查看。")]),t._v(" "),s("h2",{attrs:{id:"js-作用域及闭包相关知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-作用域及闭包相关知识"}},[t._v("#")]),t._v(" JS 作用域及闭包相关知识：")]),t._v(" "),s("h3",{attrs:{id:"谈谈你对作用域的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对作用域的理解"}},[t._v("#")]),t._v(" 谈谈你对作用域的理解？")]),t._v(" "),s("h3",{attrs:{id:"谈谈你对作用域链的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对作用域链的理解"}},[t._v("#")]),t._v(" 谈谈你对作用域链的理解？")]),t._v(" "),s("h3",{attrs:{id:"什么是自由变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是自由变量"}},[t._v("#")]),t._v(" 什么是自由变量？")]),t._v(" "),s("h3",{attrs:{id:"谈谈你对-this-的理解-如何取值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对-this-的理解-如何取值"}},[t._v("#")]),t._v(" 谈谈你对 this  的理解，如何取值？")]),t._v(" "),s("h3",{attrs:{id:"如何改变-this-的指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何改变-this-的指向"}},[t._v("#")]),t._v(" 如何改变 this 的指向？")]),t._v(" "),s("h3",{attrs:{id:"箭头函数使用时的注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数使用时的注意事项"}},[t._v("#")]),t._v(" 箭头函数使用时的注意事项？")]),t._v(" "),s("h3",{attrs:{id:"什么是尾调用、尾递归"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是尾调用、尾递归"}},[t._v("#")]),t._v(" 什么是尾调用、尾递归？")]),t._v(" "),s("h3",{attrs:{id:"谈谈你对闭包的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对闭包的理解"}},[t._v("#")]),t._v(" 谈谈你对闭包的理解？")]),t._v(" "),s("h3",{attrs:{id:"什么是内存泄露"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是内存泄露"}},[t._v("#")]),t._v(" 什么是内存泄露？")]),t._v(" "),s("h3",{attrs:{id:"javascript-内存管理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-内存管理是什么"}},[t._v("#")]),t._v(" JavaScript 内存管理是什么？")]),t._v(" "),s("h3",{attrs:{id:"谈谈-javascript-的垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈-javascript-的垃圾回收机制"}},[t._v("#")]),t._v(" 谈谈 JavaScript 的垃圾回收机制？")]),t._v(" "),s("h2",{attrs:{id:"js-同步和异步相关知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-同步和异步相关知识"}},[t._v("#")]),t._v(" JS 同步和异步相关知识：")]),t._v(" "),s("h3",{attrs:{id:"同步和异步的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步和异步的区别是什么"}},[t._v("#")]),t._v(" 同步和异步的区别是什么？")]),t._v(" "),s("h3",{attrs:{id:"前端使用异步的场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端使用异步的场景"}},[t._v("#")]),t._v(" 前端使用异步的场景？")]),t._v(" "),s("h3",{attrs:{id:"什么是回调地狱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是回调地狱"}},[t._v("#")]),t._v(" 什么是回调地狱？")]),t._v(" "),s("h3",{attrs:{id:"promise-的三种状态-如何变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-的三种状态-如何变化"}},[t._v("#")]),t._v(" promise 的三种状态，如何变化？")]),t._v(" "),s("h3",{attrs:{id:"promise-中-then-和-catch-的连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-中-then-和-catch-的连接"}},[t._v("#")]),t._v(" promise 中 then 和 catch 的连接？")]),t._v(" "),s("h3",{attrs:{id:"async-await-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await-是什么"}},[t._v("#")]),t._v(" async/await 是什么？")]),t._v(" "),s("h3",{attrs:{id:"async-await-相对于-promise-的优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await-相对于-promise-的优势"}},[t._v("#")]),t._v(" async/await 相对于 Promise 的优势？")]),t._v(" "),s("h3",{attrs:{id:"promise-构造函数是同步还是异步-then方法呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-构造函数是同步还是异步-then方法呢"}},[t._v("#")]),t._v(" Promise 构造函数是同步还是异步，then方法呢？")]),t._v(" "),s("h3",{attrs:{id:"promise-和-async-await-之间的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-和-async-await-之间的关系"}},[t._v("#")]),t._v(" Promise 和 async/await 之间的关系？")]),t._v(" "),s("h3",{attrs:{id:"async-await、settimeout、promise-叠加执行输出问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await、settimeout、promise-叠加执行输出问题"}},[t._v("#")]),t._v(" async/await、setTimeout、Promise 叠加执行输出问题？")]),t._v(" "),s("h3",{attrs:{id:"foreach-和-for-of-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach-和-for-of-的区别"}},[t._v("#")]),t._v(" forEach 和 for...of 的区别？")]),t._v(" "),s("h3",{attrs:{id:"什么是宏任务和微任务-两者有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是宏任务和微任务-两者有什么区别"}},[t._v("#")]),t._v(" 什么是宏任务和微任务，两者有什么区别？")]),t._v(" "),s("h2",{attrs:{id:"js-其他零散知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-其他零散知识"}},[t._v("#")]),t._v(" JS 其他零散知识：")]),t._v(" "),s("h3",{attrs:{id:"如何在-javascript-中实现不可变对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何在-javascript-中实现不可变对象"}},[t._v("#")]),t._v(" 如何在 JavaScript 中实现不可变对象？")]),t._v(" "),s("h3",{attrs:{id:"函数柯里化是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数柯里化是什么"}},[t._v("#")]),t._v(" 函数柯里化是什么？")]),t._v(" "),s("h3",{attrs:{id:"函数节流和函数防抖是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数节流和函数防抖是什么"}},[t._v("#")]),t._v(" 函数节流和函数防抖是什么？")]),t._v(" "),s("h3",{attrs:{id:"什么是深度优先遍历和广度优先遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是深度优先遍历和广度优先遍历"}},[t._v("#")]),t._v(" 什么是深度优先遍历和广度优先遍历？")]),t._v(" "),s("h3",{attrs:{id:"symbol-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symbol-是什么"}},[t._v("#")]),t._v(" Symbol 是什么？")]),t._v(" "),s("h3",{attrs:{id:"es6module-和-commonjs-模块的异同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6module-和-commonjs-模块的异同点"}},[t._v("#")]),t._v(" ES6Module 和 CommonJS 模块的异同点？")]),t._v(" "),s("h3",{attrs:{id:"set、map、weakset、weakmap-之间区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set、map、weakset、weakmap-之间区别"}},[t._v("#")]),t._v(" Set、Map、WeakSet、WeakMap 之间区别？")]),t._v(" "),s("h3",{attrs:{id:"你对-proxy-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你对-proxy-的理解"}},[t._v("#")]),t._v(" 你对 Proxy 的理解？")]),t._v(" "),s("h3",{attrs:{id:"你对-reflect-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你对-reflect-的理解"}},[t._v("#")]),t._v(" 你对 Reflect 的理解？")]),t._v(" "),s("h3",{attrs:{id:"babel-编译原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-编译原理"}},[t._v("#")]),t._v(" babel 编译原理？")]),t._v(" "),s("h3",{attrs:{id:"ast-树是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ast-树是什么"}},[t._v("#")]),t._v(" AST 树是什么？")]),t._v(" "),s("h3",{attrs:{id:"什么是发布订阅模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是发布订阅模式"}},[t._v("#")]),t._v(" 什么是发布订阅模式？")]),t._v(" "),s("h3",{attrs:{id:"谈谈-vuex-、redux-的设计思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈-vuex-、redux-的设计思想"}},[t._v("#")]),t._v(" 谈谈 vuex 、redux 的设计思想？")])])}),[],!1,null,null,null);a.default=e.exports}}]);